<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wms.mapper.CourseInformationMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.wms.entity.course_information">
        <id column="course_information_id" property="courseInformationId" />
        <result column="course_name" property="courseName" />
        <result column="course_types" property="courseTypes" />
        <result column="coach_user" property="coachUser" />
        <result column="coach_name" property="coachName" />
        <result column="course_hours" property="courseHours" />
        <result column="course_start_time" property="courseStartTime" />
        <result column="course_end_time" property="courseEndTime" />
        <result column="status" property="status" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        course_information_id, course_name, course_types, coach_user, coach_name, 
        course_hours, course_start_time, course_end_time, status
    </sql>

    <!-- 获取教练的课程统计信息 -->
    <select id="getCourseStatsByCoachId" resultType="java.util.Map">
        SELECT 
            COUNT(CASE WHEN status = '0' THEN 1 END) as availableCount,
            COUNT(CASE WHEN status = '1' THEN 1 END) as pendingCount,
            COUNT(CASE WHEN status = '2' THEN 1 END) as confirmedCount,
            COUNT(*) as totalCount
        FROM course_information 
        WHERE coach_user = #{coachId}
    </select>

    <!-- 获取教练的课程时间表（按日期分组） -->
    <select id="getCourseScheduleByCoachId" resultType="java.util.Map">
        SELECT 
            DATE(course_start_time) as courseDate,
            COUNT(*) as courseCount,
            GROUP_CONCAT(
                CONCAT(
                    TIME(course_start_time), '-', TIME(course_end_time), 
                    ' (', course_name, ')'
                ) SEPARATOR '; '
            ) as courseDetails
        FROM course_information 
        WHERE coach_user = #{coachId}
        AND course_start_time >= #{startDate}
        AND course_start_time &lt; #{endDate}
        GROUP BY DATE(course_start_time)
        ORDER BY course_start_time ASC
    </select>

    <!-- 检查时间冲突 -->
    <select id="checkTimeConflict" resultType="java.lang.Integer">
        SELECT COUNT(*) 
        FROM course_information 
        WHERE coach_user = #{coachId}
        AND (
            (course_start_time &lt;= #{startTime} AND course_end_time > #{startTime}) OR
            (course_start_time &lt; #{endTime} AND course_end_time >= #{endTime}) OR
            (course_start_time >= #{startTime} AND course_end_time &lt;= #{endTime})
        )
    </select>

</mapper>
